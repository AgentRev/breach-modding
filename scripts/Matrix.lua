-- Decompiled using luadec 2.0 UNICODE by sztupy (http://winmo.sztupy.hu)
-- Command line was: Matrix.luac 

module("Matrix", package.seeall)
local l_0_0 = {}
l_0_0.Initialize = function(l_1_0)
  l_1_0[1] = {}
  l_1_0[2] = {}
  l_1_0[3] = {}
  l_1_0[4] = {}
end

l_0_0.ArgsConstructor = function(l_2_0, ...)
  do
    local l_2_2, l_2_3, l_2_4, l_2_5, l_2_6, l_2_7, l_2_8, l_2_9, l_2_10, l_2_11, l_2_12, l_2_13, l_2_14, l_2_15, l_2_16, l_2_17 = ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ..., ...
     -- DECOMPILER ERROR: Overwrote pending register.

    if l_2_3 then
      local l_2_18 = ...
      if l_2_3 then
        l_2_18[1] = 1
      end
      l_2_18 = l_2_0[1]
      l_2_18[2] = l_2_3 or 0
      l_2_18 = l_2_0[1]
      l_2_18[3] = l_2_4 or 0
      l_2_18 = l_2_0[1]
      l_2_18[4] = l_2_5 or 0
      l_2_18 = l_2_0[2]
      l_2_18[1] = l_2_6 or 0
      l_2_18 = l_2_0[2]
      l_2_18[2] = l_2_7 or 1
      l_2_18 = l_2_0[2]
      l_2_18[3] = l_2_8 or 0
      l_2_18 = l_2_0[2]
      l_2_18[4] = l_2_9 or 0
      l_2_18 = l_2_0[3]
      l_2_18[1] = l_2_10 or 0
      l_2_18 = l_2_0[3]
      l_2_18[2] = l_2_11 or 0
      l_2_18 = l_2_0[3]
      l_2_18[3] = l_2_12 or 1
      l_2_18 = l_2_0[3]
      l_2_18[4] = l_2_13 or 0
      l_2_18 = l_2_0[4]
      l_2_18[1] = l_2_14 or 0
      l_2_18 = l_2_0[4]
      l_2_18[2] = l_2_15 or 0
      l_2_18 = l_2_0[4]
      l_2_18[3] = l_2_16 or 0
      l_2_18 = l_2_0[4]
      l_2_18[4] = l_2_17 or 1
    elseif l_2_2 and l_2_2[1] and l_2_2[2] and l_2_2[3] and l_2_2[4] then
      l_2_0[1][1] = l_2_2[1][1] or 1
      l_2_0[1][2] = l_2_2[1][2] or 0
      l_2_0[1][3] = l_2_2[1][3] or 0
      l_2_0[1][4] = l_2_2[1][4] or 0
      l_2_0[2][1] = l_2_2[2][1] or 0
      l_2_0[2][2] = l_2_2[2][2] or 1
      l_2_0[2][3] = l_2_2[2][3] or 0
      l_2_0[2][4] = l_2_2[2][4] or 0
      l_2_0[3][1] = l_2_2[3][1] or 0
      l_2_0[3][2] = l_2_2[3][2] or 0
      l_2_0[3][3] = l_2_2[3][3] or 1
      l_2_0[3][4] = l_2_2[3][4] or 0
      l_2_0[4][1] = l_2_2[4][1] or 0
      l_2_0[4][2] = l_2_2[4][2] or 0
      l_2_0[4][3] = l_2_2[4][3] or 0
      l_2_0[4][4] = l_2_2[4][4] or 1
    else
      l_2_0[1][1] = 1
      l_2_0[1][2] = 0
      l_2_0[1][3] = 0
      l_2_0[1][4] = 0
      l_2_0[2][1] = 0
      l_2_0[2][2] = 1
      l_2_0[2][3] = 0
      l_2_0[2][4] = 0
      l_2_0[3][1] = 0
      l_2_0[3][2] = 0
      l_2_0[3][3] = 1
      l_2_0[3][4] = 0
      l_2_0[4][1] = 0
      l_2_0[4][2] = 0
      l_2_0[4][3] = 0
      l_2_0[4][4] = 1
    end
     -- DECOMPILER ERROR: Confused about usage of registers for local variables.

  end
end

l_0_0.Add = function(l_3_0, l_3_1)
  for l_3_5 = 1, 4 do
    for l_3_9 = 1, 4 do
      l_3_0[l_3_5][l_3_9] = l_3_0[l_3_5][l_3_9] + l_3_1[l_3_5][l_3_9]
    end
  end
  return l_3_0
end

l_0_0.Subtract = function(l_4_0, l_4_1)
  for l_4_5 = 1, 4 do
    for l_4_9 = 1, 4 do
      l_4_0[l_4_5][l_4_9] = l_4_0[l_4_5][l_4_9] - l_4_1[l_4_5][l_4_9]
    end
  end
  return l_4_0
end

l_0_0.Multiply = function(l_5_0, l_5_1)
  local l_5_2 = ObjectPool.Get("Matrix")
  for l_5_6 = 1, 4 do
    for l_5_10 = 1, 4 do
      l_5_2[l_5_6][l_5_10] = 0
      for l_5_14 = 1, 4 do
        l_5_2[l_5_6][l_5_10] = l_5_2[l_5_6][l_5_10] + l_5_0[l_5_6][l_5_14] * l_5_1[l_5_14][l_5_10]
      end
    end
  end
  l_5_0:Set(l_5_2)
  ObjectPool.Recycle(l_5_2)
  return l_5_0
end

l_0_0.ScalarMultiply = function(l_6_0, l_6_1)
  for l_6_5 = 1, 4 do
    for l_6_9 = 1, 4 do
      l_6_0[l_6_5][l_6_9] = l_6_0[l_6_5][l_6_9] * l_6_1
    end
  end
  return l_6_0
end

l_0_0.GetYAxis = function(l_7_0)
  return l_7_0[2][1], l_7_0[2][2], l_7_0[2][3]
end

l_0_0.GetPos = function(l_8_0)
  return l_8_0[4][1], l_8_0[4][2], l_8_0[4][3]
end

l_0_0.Print = function(l_9_0)
  for l_9_4,l_9_5 in pairs(l_9_0) do
    print(l_9_5[1] .. "," .. l_9_5[2] .. "," .. l_9_5[3] .. "," .. l_9_5[4])
  end
end

l_0_0.Set = function(l_10_0, l_10_1, l_10_2, l_10_3, l_10_4, l_10_5, l_10_6, l_10_7, l_10_8, l_10_9, l_10_10, l_10_11, l_10_12, l_10_13, l_10_14, l_10_15, l_10_16)
  if l_10_2 then
    l_10_0[1][1] = l_10_1
    l_10_0[1][2] = l_10_2
    l_10_0[1][3] = l_10_3
    l_10_0[1][4] = l_10_4
    l_10_0[2][1] = l_10_5
    l_10_0[2][2] = l_10_6
    l_10_0[2][3] = l_10_7
    l_10_0[2][4] = l_10_8
    l_10_0[3][1] = l_10_9
    l_10_0[3][2] = l_10_10
    l_10_0[3][3] = l_10_11
    l_10_0[3][4] = l_10_12
    l_10_0[4][1] = l_10_13
    l_10_0[4][2] = l_10_14
    l_10_0[4][3] = l_10_15
    l_10_0[4][4] = l_10_16
  else
    l_10_0[1][1] = l_10_1[1][1]
    l_10_0[1][2] = l_10_1[1][2]
    l_10_0[1][3] = l_10_1[1][3]
    l_10_0[1][4] = l_10_1[1][4]
    l_10_0[2][1] = l_10_1[2][1]
    l_10_0[2][2] = l_10_1[2][2]
    l_10_0[2][3] = l_10_1[2][3]
    l_10_0[2][4] = l_10_1[2][4]
    l_10_0[3][1] = l_10_1[3][1]
    l_10_0[3][2] = l_10_1[3][2]
    l_10_0[3][3] = l_10_1[3][3]
    l_10_0[3][4] = l_10_1[3][4]
    l_10_0[4][1] = l_10_1[4][1]
    l_10_0[4][2] = l_10_1[4][2]
    l_10_0[4][3] = l_10_1[4][3]
    l_10_0[4][4] = l_10_1[4][4]
  end
end

l_0_0.SetPosition = function(l_11_0, l_11_1)
  l_11_0[4][1] = l_11_1.x
  l_11_0[4][2] = l_11_1.y
  l_11_0[4][3] = l_11_1.z
end

l_0_0.SetXAxis = function(l_12_0, l_12_1)
  l_12_0[1][1] = l_12_1.x
  l_12_0[1][2] = l_12_1.y
  l_12_0[1][3] = l_12_1.z
end

l_0_0.SetYAxis = function(l_13_0, l_13_1)
  l_13_0[2][1] = l_13_1.x
  l_13_0[2][2] = l_13_1.y
  l_13_0[2][3] = l_13_1.z
end

l_0_0.SetZAxis = function(l_14_0, l_14_1)
  l_14_0[3][1] = l_14_1.x
  l_14_0[3][2] = l_14_1.y
  l_14_0[3][3] = l_14_1.z
end

l_0_0.ToString = function(l_15_0)
  return l_15_0[1][1] .. ", " .. l_15_0[1][2] .. ", " .. l_15_0[1][3] .. ", " .. l_15_0[1][4] .. ", " .. l_15_0[2][1] .. ", " .. l_15_0[2][2] .. ", " .. l_15_0[2][3] .. ", " .. l_15_0[2][4] .. ", " .. l_15_0[3][1] .. ", " .. l_15_0[3][2] .. ", " .. l_15_0[3][3] .. ", " .. l_15_0[3][4] .. ", " .. l_15_0[4][1] .. ", " .. l_15_0[4][2] .. ", " .. l_15_0[4][3] .. ", " .. l_15_0[4][4]
end

l_0_0.SetRotationX = function(l_16_0, l_16_1)
  l_16_0[1][1] = 1
  l_16_0[2][1] = 0
  l_16_0[3][1] = 0
  l_16_0[4][1] = 0
  l_16_0[1][2] = 0
  l_16_0[2][2] = math.cos(l_16_1)
  l_16_0[3][2] = -math.sin(l_16_1)
  l_16_0[4][2] = 0
  l_16_0[1][3] = 0
  l_16_0[2][3] = -l_16_0[3][2]
  l_16_0[3][3] = l_16_0[2][2]
  l_16_0[4][3] = 0
  l_16_0[1][4] = 0
  l_16_0[2][4] = 0
  l_16_0[3][4] = 0
  l_16_0[4][4] = 1
end

l_0_0.SetRotationY = function(l_17_0, l_17_1)
  l_17_0[1][1] = math.cos(l_17_1)
  l_17_0[2][1] = 0
  l_17_0[3][1] = math.sin(l_17_1)
  l_17_0[4][1] = 0
  l_17_0[1][2] = 0
  l_17_0[2][2] = 1
  l_17_0[3][2] = 0
  l_17_0[4][2] = 0
  l_17_0[1][3] = -l_17_0[3][1]
  l_17_0[2][3] = 0
  l_17_0[3][3] = l_17_0[1][1]
  l_17_0[4][3] = 0
  l_17_0[1][4] = 0
  l_17_0[2][4] = 0
  l_17_0[3][4] = 0
  l_17_0[4][4] = 1
end

l_0_0.SetRotationZ = function(l_18_0, l_18_1)
  l_18_0[1][1] = math.cos(l_18_1)
  l_18_0[2][1] = -math.sin(l_18_1)
  l_18_0[3][1] = 0
  l_18_0[4][1] = 0
  l_18_0[1][2] = -l_18_0[2][1]
  l_18_0[2][2] = l_18_0[1][1]
  l_18_0[3][2] = 0
  l_18_0[4][2] = 0
  l_18_0[1][3] = 0
  l_18_0[2][3] = 0
  l_18_0[3][3] = 1
  l_18_0[4][3] = 0
  l_18_0[1][4] = 0
  l_18_0[2][4] = 0
  l_18_0[3][4] = 0
  l_18_0[4][4] = 1
end

l_0_0.__tostring = l_0_0.ToString
l_0_0.__concat = ObjectOrientedParadigm.toStringConcat
l_0_0.Name = "Matrix"
DeclareClass(l_0_0)

